version: '3.3'

services:

  zoo1:
    image: zookeeper:3.4.9
    ports:
      - 2181:2181
    hostname: zoo1
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zoo1:2888:3888
    networks: 
      - default
    volumes:
      - zookeeper-volume:/data

  kafka1:
    image: confluentinc/cp-kafka:5.2.1
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-host.docker.internal}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAKFA_NUM_PARTITIONS: 3
      KAFKA_LOG_RETENTION_HOURS: 1000000
    networks: 
      - default
    depends_on:
      - zoo1
    volumes:
      - kafka-volume:/var/lib/kafka/data/  

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
    - .:/etc/prometheus
      
  grafana:
    image: grafana/grafana:latest
    ports: 
      - "3000:3000"
    depends_on: 
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - "GF_INSTALL_PLUGINS=grafana-piechart-panel,blackmirror1-singlestat-math-panel"
    networks:
      - default
  
  testproducerstatistics:
    image: testproducerstatistics:latest
    environment:
      - topic=test.topic2
      - producerConf:bootstrapServers=kafka1:9092
      - prometheusMetrics:enabled=true
      - prometheusMetrics:port=8080
    networks:
      - default    
  testconsumerstatistics:
    image: testconsumerstatistics:latest
    environment:
      - topic=test.topic2
      - consumerConf:bootstrapServers=kafka1:9092
      - prometheusMetrics:enabled=true
      - prometheusMetrics:port=8080
    networks:
      - default

volumes:
  grafana-data:
  prometheus_data:
  kafka-volume:
  zookeeper-volume:   

networks:
  default:
